// Code generated by generator using '{{.Global.TemplatePath}}'; DO NOT EDIT.
// Generation time: {{.Global.GenerationTime}}
{{- if .Global.Params}}
	// Parameters: {{$first := true}}{{range $key, $value := .Global.Params}}{{if $first}}{{$first = false}}{{else}} {{end}}{{$key}}={{$value}}{{end}}
{{- end}}

package {{.PackageName}}

import "testing"

// // // // // // // //

func TestString(t *testing.T) {
	if {{.GoName}}.String() != "{{.ColumnName}}" {
		t.Fatalf("expected %q, got %q", "{{.ColumnName}}", {{.GoName}}.String())
	}
}

func TestStringSQL(t *testing.T) {
	expected := "{{.ColumnNameSQL}}"
	if {{.GoName}}.StringSQL() != expected {
		t.Fatalf("expected %q, got %q", expected, {{.GoName}}.StringSQL())
	}
}

func TestTableName(t *testing.T) {
	if {{.GoName}}.TableName() != "{{.TableName}}" {
		t.Fatalf("expected %q, got %q", "{{.TableName}}", {{.GoName}}.TableName())
	}
}

// // // //

func BenchmarkString(b *testing.B) {
	for i := 0; i < b.N; i++ {
		_ = {{.GoName}}.String()
	}
}

func BenchmarkStringSQL(b *testing.B) {
	for i := 0; i < b.N; i++ {
		_ = {{.GoName}}.StringSQL()
	}
}

func BenchmarkType(b *testing.B) {
	for i := 0; i < b.N; i++ {
		_ = {{.GoName}}.Type()
	}
}

func BenchmarkTableName(b *testing.B) {
	for i := 0; i < b.N; i++ {
		_ = {{.GoName}}.TableName()
	}
}
