// Code generated by generator using '{{.Global.TemplatePath}}'; DO NOT EDIT.
// Generation time: {{.Global.GenerationTime}}
{{- if .Global.Params}}
    // Parameters: {{$first := true}}{{range $key, $value := .Global.Params}}{{if $first}}{{$first = false}}{{else}} {{end}}{{$key}}={{$value}}{{end}}
{{- end}}

package {{.PackageName}}

{{if gt (len .ImportArr) 0}}
    {{if eq (len .ImportArr) 1}}
import "{{index .ImportArr 0}}"
    {{else}}
import (
{{range .ImportArr}}    "{{.}}"
{{end}})
    {{end}}
{{end}}

{{$PrefixStruct := "Obj"}}
{{$PrefixTableStruct := "TableObj"}}

// // // // // // // //

type {{.TypeColumnName}} string

{{- if .Obj.CommentStruct }}

    // {{ .Obj.CommentStruct }}
{{- end }}
type {{ .Obj.NameStruct }}{{$PrefixStruct}} struct {
{{- range .Obj.LinesArr }}
    {{ .Name }} {{ .Type }} {{- if .Reflect }}`{{ .Reflect }}`{{ end }}{{- if .Comment }} // {{ .Comment }}{{ end }}
{{- end }}
}

{{- if .TableObj.CommentStruct }}

    // {{ .TableObj.CommentStruct }}
{{- end }}
type {{ .TableObj.NameStruct }}{{$PrefixTableStruct}} struct {
{{- range .TableObj.LinesArr }}
    {{ .Name }} {{ .Type }} {{- if .Reflect }}`{{ .Reflect }}`{{ end }}{{- if .Comment }} // {{ .Comment }}{{ end }}
{{- end }}
}
