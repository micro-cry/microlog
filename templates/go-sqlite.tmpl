// Code generated by generator using '{{.Global.TemplatePath}}'; DO NOT EDIT.
// Generation time: {{.Global.GenerationTime}}
{{- if .Global.Params}}
    // Parameters: {{$first := true}}{{range $key, $value := .Global.Params}}{{if $first}}{{$first = false}}{{else}} {{end}}{{$key}}={{$value}}{{end}}
{{- end}}

package {{.PackageName}}


import (
"context"
"database/sql"
)

// // // // // // // //

type {{.SQLiteObjName}} struct {
db  *sql.DB
ctx context.Context
}

func DriverSQLite(db *sql.DB, ctx context.Context) *{{.SQLiteObjName}} {
obj := new({{.SQLiteObjName}})
obj.db = db
obj.ctx = ctx
return obj
}

// //

func (obj *{{.SQLiteObjName}}) Ping() error {
return obj.db.PingContext(obj.ctx)
}
